---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=tmdb_key&query=barbie
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.11
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 23 Oct 2023 19:21:31 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=22801
      X-Memc:
      - HIT
      X-Memc-Key:
      - c99b50cfe8ed7e56bded4661a4eb99aa
      X-Memc-Age:
      - '2712'
      X-Memc-Expires:
      - '21443'
      Etag:
      - W/"fd4bf953fde99e227bc2d2bf93f16ebc"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 3a3c5f259ae7ff22c721cf2dd9f734ae.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SLC50-C1
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - w6WXlVIDC3qys3uDR3mvxn5FPmmHZ33Wtmgo5rNhgfbOT8btd5GNCg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJyZXN1bHRzIjpbeyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvY3RNc2VySDhnMlNlT0FuQ3c1Z0ZqZFFGOG1vLmpwZyIsImdlbnJlX2lkcyI6WzM1LDEyLDE0XSwiaWQiOjM0NjY5OCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQmFyYmllIiwib3ZlcnZpZXciOiJCYXJiaWUgYW5kIEtlbiBhcmUgaGF2aW5nIHRoZSB0aW1lIG9mIHRoZWlyIGxpdmVzIGluIHRoZSBjb2xvcmZ1bCBhbmQgc2VlbWluZ2x5IHBlcmZlY3Qgd29ybGQgb2YgQmFyYmllIExhbmQuIEhvd2V2ZXIsIHdoZW4gdGhleSBnZXQgYSBjaGFuY2UgdG8gZ28gdG8gdGhlIHJlYWwgd29ybGQsIHRoZXkgc29vbiBkaXNjb3ZlciB0aGUgam95cyBhbmQgcGVyaWxzIG9mIGxpdmluZyBhbW9uZyBodW1hbnMuIiwicG9wdWxhcml0eSI6Nzk5LjA0NiwicG9zdGVyX3BhdGgiOiIvaXVGTk1TOFU1Y2I2eGZ6aTUxRGJrb3ZqN3ZNLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjMtMDctMTkiLCJ0aXRsZSI6IkJhcmJpZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjIzMiwidm90ZV9jb3VudCI6NTU0NX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzM1XSwiaWQiOjYxNzkzMiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQmFyYmllIiwib3ZlcnZpZXciOiJCYXJiaWUgY29tZXMgaG9tZSBmcm9tIHNob3BwaW5nLiBTaGUgdGFrZXMgaGVyIGdyb2NlcmllcyBvdXQgb2YgdGhlIGJhZyBhbmQgdW53cmFwcyBhIGxpdHRsZSBCYXJiaWUgZG9sbC4gU2hlIGZyaWVzIHVwIHRoZSBCYXJiaWUgZG9sbCBhbmQgZWF0cyBpdC4iLCJwb3B1bGFyaXR5IjoyLjc1MiwicG9zdGVyX3BhdGgiOiIvQTFOdmRkb3F5QmphSWZFSERhZmZJSkZHeGNNLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NzctMDEtMDEiLCJ0aXRsZSI6IkJhcmJpZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjcsInZvdGVfY291bnQiOjIyfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii92NXhYVHBmTVQ1TnBqUWVETU5ZTkxmbGFpdUEuanBnIiwiZ2VucmVfaWRzIjpbMTYsMTA3NTFdLCJpZCI6MTMwMDIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJhcmJpZSBpbiB0aGUgMTIgRGFuY2luZyBQcmluY2Vzc2VzIiwib3ZlcnZpZXciOiJLaW5nIFJhbmRvbHBoIHNlbmRzIGZvciBoaXMgY291c2luLCBEdWNoZXNzIFJvd2VuYSwgdG8gaGVscCB0dXJuIGhpcyBkYXVnaHRlcnMsIFByaW5jZXNzIEdlbmV2aWV2ZSBhbmQgaGVyIGVsZXZlbiBzaXN0ZXJzLCBpbnRvIHJveWFsIG1hdGVyaWFsLiBCdXQgdGhlIER1Y2hlc3Mgc3RyaXBzIHRoZSBzaXN0ZXJzIG9mIHRoZWlyIGZ1biwgaW5jbHVkaW5nIHRoZWlyIGZhdm9yaXRlIHBhc3RpbWU6IGRhbmNpbmcuIFdoZW4gYWxsIGhvcGUgbWF5IGJlIGxvc3QsIHRoZSBzaXN0ZXJzIGRpc2NvdmVyIGEgc2VjcmV0IHBhc3NhZ2V3YXkgdG8gYSBtYWdpY2FsIGxhbmQgd2hlcmUgdGhleSBjYW4gZGFuY2UgdGhlIG5pZ2h0IGF3YXkuIiwicG9wdWxhcml0eSI6NDIuMDM5LCJwb3N0ZXJfcGF0aCI6Ii95QkI3UHdYUkZKMjlVOG04U25UY1dWaXpGdk0uanBnIiwicmVsZWFzZV9kYXRlIjoiMjAwNi0wOS0xOSIsInRpdGxlIjoiQmFyYmllIGluIFRoZSAxMiBEYW5jaW5nIFByaW5jZXNzZXMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny42NTYsInZvdGVfY291bnQiOjEwNjh9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL1FBTDZaSTJtTEVYaUlVR2hHWWQxZll1ajlRLmpwZyIsImdlbnJlX2lkcyI6WzE2LDEwNzUxXSwiaWQiOjE2NDE4LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJCYXJiaWUgUHJlc2VudHM6IFRodW1iZWxpbmEiLCJvdmVydmlldyI6Ik1lZXQgYSB0aW55IGdpcmwgbmFtZWQgVGh1bWJlbGluYSB3aG8gbGl2ZXMgaW4gaGFybW9ueSB3aXRoIG5hdHVyZSBpbiB0aGUgbWFnaWNhbCB3b3JsZCBvZiB0aGUgVHdpbGxlcmJlZXMgdGhhdCdzIGhpZGRlbiBhbW9uZyB0aGUgd2lsZGZsb3dlcnMuIEF0IHRoZSB3aGltIG9mIGEgc3BvaWxlZCB5b3VuZyBnaXJsIG5hbWVkIE1ha2VuYSwgVGh1bWJlbGluYSBhbmQgaGVyIHR3byBmcmllbmRzIGhhdmUgdGhlaXIgcGF0Y2ggb2Ygd2lsZGZsb3dlcnMgdXByb290ZWQgYW5kIGFyZSB0cmFuc3BvcnRlZCB0byBhIGxhdmlzaCBhcGFydG1lbnQgaW4gdGhlIGNpdHkuIiwicG9wdWxhcml0eSI6MjMuOTAyLCJwb3N0ZXJfcGF0aCI6Ii95dEtkMmpXbnpXTENpY2N1dHFxTU56Y1A1UkUuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAwOS0wMi0yNCIsInRpdGxlIjoiQmFyYmllIFByZXNlbnRzOiBUaHVtYmVsaW5hIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuNjEzLCJ2b3RlX2NvdW50Ijo0NTN9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2hidkNaMTJIaUM2RHg0bWJnZVVyN2FIQklQUC5qcGciLCJnZW5yZV9pZHMiOlsxNiwxMDc1MSwxMiwxNF0sImlkIjoxMzI4NSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQmFyYmllIEZhaXJ5dG9waWE6IE1lcm1haWRpYSIsIm92ZXJ2aWV3IjoiSW4gdGhpcyBhbmltYXRlZCBmb2xsb3ctdXAgdG8gRmFpcnl0b3BpYSwgRWxpbmEgZW5saXN0cyB0aGUgaGVscCBvZiBhIG1lcm1haWQsIE5vcmksIHRvIHNhdmUgaGVyIGZyaWVuZCBOYWx1LCBhIG1lcm1hbiBwcmluY2Ugd2hvIGhhcyBiZWVuIGNhcHR1cmVkIGJ5IHRoZSB3aWNrZWQgTGF2ZXJuYS4iLCJwb3B1bGFyaXR5IjoyOS43MTksInBvc3Rlcl9wYXRoIjoiL2lnc3FTN3JwbmtBVDkySXFvNXNZd1RzMUtXby5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDA2LTAzLTE0IiwidGl0bGUiOiJCYXJiaWU6IEZhaXJ5dG9waWEgLSBNZXJtYWlkaWEiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni44NTUsInZvdGVfY291bnQiOjY0NH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvamhpZ0hwb3hMRHhwalVVdUJPQ1ZtQW84bnRiLmpwZyIsImdlbnJlX2lkcyI6WzE2LDEwNzUxXSwiaWQiOjEzNDU5LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJCYXJiaWUgaW4gJ0EgQ2hyaXN0bWFzIENhcm9sJyIsIm92ZXJ2aWV3IjoiT24gQ2hyaXN0bWFzIEV2ZSwgS2VsbHkgaXMgcmVsdWN0YW50IHRvIGdvIHRvIGEgQ2hyaXN0bWFzIEV2ZSBiYWxsLCBzbyBCYXJiaWUgdGVsbHMgaGVyIHRoZSBzdG9yeSBvZiBFZGVuIFN0YXJsaW5nLCBhIGdsYW1vcm91cyBzaW5naW5nIGRpdmEgaW4gdGhlIFZpY3RvcmlhbiBFbmdsYW5kIGFuZCB0aGUgb3duZXIgb2YgYSB0aGVhdHJlIGhvdXNlLiBIb3dldmVyLCBFZGVuIGlzIHNlbGYtY2VudGVyZWQgYW5kIGxvdmVzIG9ubHkgaGVyc2VsZi4gU2hlIGlzIGZyZXF1ZW50bHkgYWNjb21wYW5pZWQgYnkgaGVyIHNub290eSBjYXQsIENodXp6bGV3aXQuIFNoZSBkb2VzIG5vdCBiZWxpZXZlIGluIENocmlzdG1hcyBhbmQgb3JkZXJzIGFsbCBoZXIgZW1wbG95ZWVzIHRvIHdvcmsgb24gQ2hyaXN0bWFzLiIsInBvcHVsYXJpdHkiOjI5LjExNywicG9zdGVyX3BhdGgiOiIvZlg5ZzFBRTFKSXFqWDNMUFBLVmpjbUhzNmZkLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMDgtMTEtMDMiLCJ0aXRsZSI6IkJhcmJpZSBpbiBBIENocmlzdG1hcyBDYXJvbCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjAzOCwidm90ZV9jb3VudCI6NDk3fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9iVFU2NHhMNHVUb1RqUVp3SUNQWnpNYjR5WnQuanBnIiwiZ2VucmVfaWRzIjpbMjgsMTYsMTA3NTFdLCJpZCI6Mzc3ODk3LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJCYXJiaWU6IFNweSBTcXVhZCIsIm92ZXJ2aWV3IjoiQmFyYmllIGFuZCBoZXIgYmVzdCBmcmllbmRzIFRlcmVzYSBhbmQgUmVuZWUgdHJhbnNmb3JtIGZyb20gaGFyZC13b3JraW5nIGd5bW5hc3RzIHRvIHVuZGVyY292ZXIgc2VjcmV0IGFnZW50cy4gV2hlbiB0aGVpciBhbWF6aW5nIGd5bW5hc3RpY3Mgc2tpbGxzIGNhdGNoIHRoZSBleWUgb2YgYSB0b3Atc2VjcmV0IHNweSBhZ2VuY3ksIHRoZSBnaXJscyBhcmUgc29vbiBmb2xsb3dpbmcgY2x1ZXMgdG8gYSBnZW0tc3RlYWxpbmcgY2F0IGJ1cmdsYXIsIHVzaW5nIGhpZ2gtdGVjaCBnYWRnZXRzLCBnbGFtIGRpc2d1aXNlcyBhbmQgY3V0ZSByb2JvLXBldHMgdG8gc2F2ZSB0aGUgZGF5LiIsInBvcHVsYXJpdHkiOjIxLjk1MiwicG9zdGVyX3BhdGgiOiIvdXhkdkpIRTVWODQ0ZFRsSzJFbXFSUUNUWURiLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTYtMDEtMTUiLCJ0aXRsZSI6IkJhcmJpZTogU3B5IFNxdWFkIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuOTU4LCJ2b3RlX2NvdW50IjozNjd9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzNoWGZwb01qY1FxaFNSaXBkT0J6TUN1bk1hUi5qcGciLCJnZW5yZV9pZHMiOlsxMDc1MSwxNl0sImlkIjozNDM5NDgsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlNpbmcgQWxvbmcgd2l0aCBCYXJiaWUiLCJvdmVydmlldyI6IlNpbmcsIGRhbmNlIGFuZCBkcmVhbSB3aXRoIEJhcmJpZSBhbmQgZnJpZW5kcyBpbiBoZXIgdmVyeSBmaXJzdCBjb2xsZWN0aW9uIG9mIHNpbmctYWxvbmcgc29uZ3MgZnJvbSBCYXJiaWUgRW50ZXJ0YWlubWVudC4gRWFzeS10by1mb2xsb3csIG9uLXNjcmVlbiBseXJpY3MgbGV0IHlvdSBwZXJmb3JtIHlvdXIgZmF2b3JpdGUgQmFyYmllIHNvbmdzIGxpa2UgbmV2ZXIgYmVmb3JlLiBSZWxpdmUgdGhlIGFkdmVudHVyZSBhbmQgbWFnaWMgZnJvbSBjbGFzc2ljIEJhcmJpZSBtb3ZpZSBtb21lbnRzIHRocm91Z2ggdHdlbHZlIG1lbW9yYWJsZSBtZWxvZGllcy4iLCJwb3B1bGFyaXR5Ijo2NS4wMjEsInBvc3Rlcl9wYXRoIjoiL3hYbldiQUJxbTdwRUhTNGhDZG04QVk3RmNpSy5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDA5LTExLTEwIiwidGl0bGUiOiJTaW5nIEFsb25nIHdpdGggQmFyYmllIiwidmlkZW8iOnRydWUsInZvdGVfYXZlcmFnZSI6Ny4wLCJ2b3RlX2NvdW50Ijo4fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii94eEp6NlVUQVA4SUZlemhnbER0emNmSzdyVHAuanBnIiwiZ2VucmVfaWRzIjpbMTA3NTEsMTZdLCJpZCI6MTE2NTIyMywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiTXkgRmlyc3QgQmFyYmllOiBIYXBweSBEcmVhbURheSIsIm92ZXJ2aWV3IjoiU2luZyBhbG9uZyB3aXRoIEJhcmJpZSwgQmFyYmllLCBUZXJlc2EsIGFuZCBSZW5lZSBpbiB0aGlzIG11c2ljYWwgYWR2ZW50dXJlIGFzIHRoZXkgcGxhbiB0aGUgYmlnZ2VzdCBzdXJwcmlzZSBiaXJ0aGRheSBwYXJ0eSBldmVyIGZvciBCYXJiaWXigJlzIHNpc3RlciwgQ2hlbHNlYS4iLCJwb3B1bGFyaXR5IjoxMTYuOTcyLCJwb3N0ZXJfcGF0aCI6Ii96VUdEbzlsdVRJeWlWZlBWRW1LR2E1NXBJSmEuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMy0wMi0xMyIsInRpdGxlIjoiTXkgRmlyc3QgQmFyYmllOiBIYXBweSBEcmVhbURheSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjUsInZvdGVfY291bnQiOjEzfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii83Ym85UThIaU1ZTjhQOUVVM3NkYmtTdUNzTEQuanBnIiwiZ2VucmVfaWRzIjpbMzUsMTA3NDldLCJpZCI6MzQ1NjQsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBTaHJpbXAgb24gdGhlIEJhcmJpZSIsIm92ZXJ2aWV3IjoiQ2FybG9zIGhhcyBmYWlsZWQgaW4gc2hvdy1iaXogYW5kIGN1cnJlbnRseSB3b3JrcyBhcyBhIHdhaXRlciBpbiBhIE1leGljYW4gcmVzdGF1cmFudC4gVGhlcmUgaGUgbWVldHMgQWxleCBhbmQgZHVtYiBmb290YmFsbGVyIEJydWNlIGNlbGVicmF0aW5nIHRoZWlyIGVuZ2FnZW1lbnQgd2l0aCBoZXIgcGFyZW50cy4gQWxleCcgZmF0aGVyIGlzIGxlc3MgdGhhbiB0aHJpbGxlZCBvZiBoZXIgZmlhbmPDqWUgYW5kIHNheXMgaGUnZCByYXRoZXIgYWNjZXB0IGFueWJvZHkgZWxzZS4gRXZlbnR1YWxseSBBbGV4IGhpcmVzIENhcmxvcyB0byBwcmVzZW50IGhpbSBhcyBoZXIgbmV3IGZpYW5jw6llLiIsInBvcHVsYXJpdHkiOjUuNDQzLCJwb3N0ZXJfcGF0aCI6Ii84VW5XSnNzMzd3VkxUVmo0ZlR6S3l2M01yYnAuanBnIiwicmVsZWFzZV9kYXRlIjoiMTk5MC0wOC0zMSIsInRpdGxlIjoiVGhlIFNocmltcCBvbiB0aGUgQmFyYmllIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuMjA3LCJ2b3RlX2NvdW50IjoyN30seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvaWpmUHUxSWFEankxUFBVTWg1N1BpaEhsUllmLmpwZyIsImdlbnJlX2lkcyI6WzEwNzcwLDE2LDEwNDAyLDEyLDg3OF0sImlkIjoxOTg4ODQsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJhcmJpZSBhbmQgVGhlIFNlbnNhdGlvbnM6IFJvY2tpbicgQmFjayB0byBFYXJ0aCIsIm92ZXJ2aWV3IjoiRm9sbG93aW5nIHRoZWlyIGNvbmNlcnQgZm9yIHdvcmxkIHBlYWNlIGluIG91dGVyIHNwYWNlLCBCYXJiaWUgYW5kIGhlciBiYW5kIHRoZSBSb2NrZXJzIGFyZSBnb2luZyBiYWNrIGhvbWUuIER1cmluZyB0aGUgdHJpcCBiYWNrIHRvIEVhcnRoLCB0aGUgYmFuZCdzIHNwYWNlIHNodXR0bGUgaW5hZHZlcnRlbnRseSBlbnRlcnMgYSB0aW1lIHdhcnAuIFVwb24gbGFuZGluZyBhdCBhbiBhaXJwb3J0LCB0aGV5IG1lZXQgRHIuIE1lcnJpaGV3IGFuZCBoaXMgZGF1Z2h0ZXIgS2ltIGFuZCBzb29uIGxlYXJuIHRoYXQgdGhleSBoYXZlIGJlZW4gdHJhbnNwb3J0ZWQgYmFjayB0byAxOTU5LiBUaGUgYmFuZCB0aGVuIGRlY2lkZXMgdG8gZ28gb24gYSB0b3VyIGFyb3VuZCB0aGUgY2l0eSBhbG9uZ3NpZGUgS2ltLiBBZnRlciBhIHBlcmZvcm1hbmNlIGF0IENhcGUgQ2FuYXZlcmFsLCBEci4gTWVycmloZXcgaGVscHMgQmFyYmllIGFuZCB0aGUgUm9ja2VycyByZXR1cm4gdG8gdGhlaXIgdGltZS4gQmFjayBpbiB0aGUgcHJlc2VudCwgdGhleSBzdGFnZSBhIGJpZyBjb25jZXJ0IGluIE5ldyBZb3JrIENpdHksIHdoZXJlIEJhcmJpZSBpcyByZXVuaXRlZCB3aXRoIGFuIGFkdWx0IEtpbSBhbmQgaW50cm9kdWNlZCB0byBoZXIgZGF1Z2h0ZXIgTWVnYW4uIiwicG9wdWxhcml0eSI6Mi44MTUsInBvc3Rlcl9wYXRoIjoiL3ZVQ3F2eW14VXdZeHA5SDZqdzVSNVVpYWVFNS5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTg3LTAxLTAxIiwidGl0bGUiOiJCYXJiaWUgYW5kIHRoZSBTZW5zYXRpb25zOiBSb2NraW4nIEJhY2sgdG8gRWFydGgiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny42NDYsInZvdGVfY291bnQiOjI0fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9pdTJ5STlhb2haNkVublU0MmRMUUZkY2VwdVouanBnIiwiZ2VucmVfaWRzIjpbMTYsMTA3NTEsMzVdLCJpZCI6MTUxNjUsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJhcmJpZSBhcyBUaGUgUHJpbmNlc3MgXHUwMDI2IHRoZSBQYXVwZXIiLCJvdmVydmlldyI6IkluIGhlciBmaXJzdCBhbmltYXRlZCBtdXNpY2FsIGZlYXR1cmluZyBzZXZlbiBvcmlnaW5hbCBzb25ncywgQmFyYmllIGNvbWVzIHRvIGxpZmUgaW4gdGhpcyBtb2Rlcm4gcmUtdGVsbGluZyBvZiBhIGNsYXNzaWMgdGFsZSBvZiBtaXN0YWtlbiBpZGVudGl0eSBhbmQgdGhlIHBvd2VyIG9mIGZyaWVuZHNoaXAuIEJhc2VkIG9uIHRoZSBzdG9yeSBieSBNYXJrIFR3YWluLiIsInBvcHVsYXJpdHkiOjQ0Ljc4NCwicG9zdGVyX3BhdGgiOiIveEhZc1V3VWU0TWFOYzZtYk5CR1RrcVpTblBrLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMDQtMDktMjgiLCJ0aXRsZSI6IkJhcmJpZSBhcyBUaGUgUHJpbmNlc3MgXHUwMDI2IHRoZSBQYXVwZXIiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny40OTksInZvdGVfY291bnQiOjEzNjd9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3BSNTF0V0hsVVdVRW5QVWM1bXk5YW5xY0R0by5qcGciLCJnZW5yZV9pZHMiOlsxMDc1MSwxNiwxNF0sImlkIjo3MzQ1Niwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQmFyYmllOiBQcmluY2VzcyBDaGFybSBTY2hvb2wiLCJvdmVydmlldyI6IkJhcmJpZSBzdGFycyBhcyBCbGFpciBXaWxsb3dzLCBhIGtpbmQtaGVhcnRlZCBnaXJsIHdobyBpcyBjaG9zZW4gdG8gYXR0ZW5kIFByaW5jZXNzIENoYXJtIFNjaG9vbDogYSBtYWdpY2FsLCBtb2Rlcm4gcGxhY2UgdGhhdCB0ZWFjaGVzIGRhbmNpbmcsIGhvdyB0byBoYXZlIHRlYSBwYXJ0aWVzLCBhbmQgcHJvcGVyIHByaW5jZXNzIG1hbm5lcnMuIEJsYWlyIGxvdmVzIGhlciBjbGFzc2VzIC0tIGFzIHdlbGwgYXMgdGhlIGhlbHBmdWwgbWFnaWNhbCBzcHJpdGVzIGFuZCBoZXIgbmV3IGZyaWVuZHMsIFByaW5jZXNzZXMgSGFkbGV5IGFuZCBJc2xhLiBCdXQgd2hlbiByb3lhbCB0ZWFjaGVyIERhbWUgRGV2aW4gZGlzY292ZXJzIHRoYXQgQmxhaXIgbG9va3MgYSBsb3QgbGlrZSB0aGUga2luZ2RvbeKAmXMgbWlzc2luZyBwcmluY2Vzcywgc2hlIHR1cm5zIEJsYWly4oCZcyB3b3JsZCB1cHNpZGUgZG93biB0byBzdG9wIGhlciBmcm9tIGNsYWltaW5nIHRoZSB0aHJvbmUuIE5vdyBCbGFpciwgSGFkbGV5IGFuZCBEZWxhbmN5IG11c3QgZmluZCBhbiBlbmNoYW50ZWQgY3Jvd24gdG8gcHJvdmUgQmxhaXLigJlzIHRydWUgaWRlbnRpdHkgaW4gdGhpcyBjaGFybWluZyBhbmQgbWFnaWNhbCBwcmluY2VzcyBzdG9yeSEiLCJwb3B1bGFyaXR5Ijo0My40MzksInBvc3Rlcl9wYXRoIjoiL2xJMmpQYnNzYXg2WFg1dkRxQjltVEpIR3pmSC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDExLTA4LTExIiwidGl0bGUiOiJCYXJiaWU6IFByaW5jZXNzIENoYXJtIFNjaG9vbCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjQ0OSwidm90ZV9jb3VudCI6NzE4fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbXSwiaWQiOjExNjE5OTcsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJlbGFzIEJhcmJpZXMiLCJvdmVydmlldyI6IkEgcXVpY2sgaW50cm8gdG8gaG93IGRvZXMgc3R1ZGVudCBsaWZlIGluIEJlbGFzIEFydGVzIG9mIFPDo28gUGF1bG8gd29ya3MuIE1hZGUgZm9yIHRoZSBmcmVzaG1lbidzIGZpcnN0IHdlZWsgYnkgdGhlaXIgc2VuaW9ycy4iLCJwb3B1bGFyaXR5IjoxLjkwMSwicG9zdGVyX3BhdGgiOiIvZmpWckhWSEM3R0pPUXUwZ25JU1RkbHJjQjY2LmpwZyIsInJlbGVhc2VfZGF0ZSI6IiIsInRpdGxlIjoiQmVhdXRpZnVsIEJhcmJpZXMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6OC40LCJ2b3RlX2NvdW50Ijo1fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii90b25ydWxUbU85WnlabXNBc3I1eXI5Y2lFNGMuanBnIiwiZ2VucmVfaWRzIjpbMTYsMTA3NTFdLCJpZCI6MTUwMTYsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJhcmJpZSBvZiBTd2FuIExha2UiLCJvdmVydmlldyI6IkJhcmJpZSBhcyBPZGV0dGUsIHRoZSB5b3VuZyBkYXVnaHRlciBvZiBhIGJha2VyLCBmb2xsb3dzIGEgdW5pY29ybiBpbnRvIHRoZSBFbmNoYW50ZWQgRm9yZXN0IGFuZCBpcyB0cmFuc2Zvcm1lZCBpbnRvIGEgc3dhbiBieSBhbiBldmlsIHdpemFyZCBpbnRlbnQgb24gZGVmZWF0aW5nIHRoZSBGYWlyeSBRdWVlbi4iLCJwb3B1bGFyaXR5IjozMS43MDYsInBvc3Rlcl9wYXRoIjoiL3NMcENMVlFXVFU3Qkk0eUFMNmtJRk05SjNlWC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDAzLTA5LTI3IiwidGl0bGUiOiJCYXJiaWUgb2YgU3dhbiBMYWtlIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuOTg0LCJ2b3RlX2NvdW50IjoxMDI3fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9idWR2VUpkU05LVnpFa05kb2g0cWE0cjdWajEuanBnIiwiZ2VucmVfaWRzIjpbMTYsMTA3NTFdLCJpZCI6MTUxNjcsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJhcmJpZSBpbiB0aGUgTnV0Y3JhY2tlciIsIm92ZXJ2aWV3IjoiXCJCYXJiaWVcIiBzdGFycyBhcyBDbGFyYSBpbiB0aGlzIGFuaW1hdGVkIHJldGVsbGluZyBvZiB0aGUgY2xhc3NpYyBDaHJpc3RtYXMgYmFsbGV0LCBjb21wbGV0ZSB3aXRoIFRjaGFpa292c2t5IHNvdW5kdHJhY2sgYW5kIGJhbGxldCBjaG9yZW9ncmFwaHkuIiwicG9wdWxhcml0eSI6MzEuOTcxLCJwb3N0ZXJfcGF0aCI6Ii9lSWtYSmdnVm16TjRNeVBnSjJrRGpPeTlsbVEuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAwMS0wOS0zMCIsInRpdGxlIjoiQmFyYmllIGluIHRoZSBOdXRjcmFja2VyIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuODIxLCJ2b3RlX2NvdW50Ijo5Nzd9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2tIeG52clhhV0RpT3N2alI3bzZxWXUxNXA3SC5qcGciLCJnZW5yZV9pZHMiOlsxNiwxMDc1MV0sImlkIjoxNTAxNSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQmFyYmllIGFzIFJhcHVuemVsIiwib3ZlcnZpZXciOiJMb25nLCBsb25nIGFnbywgaW4gYSB0aW1lIG9mIG1hZ2ljIGFuZCBkcmFnb25zLCB0aGVyZSBsaXZlZCBhIGdpcmwgbmFtZWQgUmFwdW56ZWwgd2hvIGhhZCB0aGUgbW9zdCBiZWF1dGlmdWwgcmFkaWFudCBoYWlyIHRoZSB3b3JsZCBoYWQgZXZlciBzZWVuLiBCdXQgUmFwdW56ZWwncyBsaWZlIHdhcyBmYXIgZnJvbSB3b25kZXJmdWwuIFNoZSBsaXZlZCBhcyBhIHNlcnZhbnQgdG8gR290aGVsLCBhIGplYWxvdXMsIHNjaGVtaW5nIHdpdGNoIHdobyBrZXB0IGhlciBoaWRkZW4gZGVlcCBpbiBhIGZvcmJpZGRpbmcgZm9yZXN0LCBndWFyZGVkIGJ5IHRoZSBlbm9ybW91cyBkcmFnb24gSHVnbyBhbmQgc3Vycm91bmRlZCBieSBhbiBlbmNoYW50ZWQgZ2xhc3Mgd2FsbC4gSG93ZXZlciwgaW4gYSB0d2lzdCBvZiBmYXRlLCBSYXB1bnplbCdzIGRpc2NvdmVyeSBvZiBhIG1hZ2ljIHBhaW50YnJ1c2ggbGVhZHMgaGVyIG9uIGEgam91cm5leSB0aGF0IHdpbGwgdW5yYXZlbCBhIHdlYiBvZiBkZWNlcHRpb24sIGJyaW5nIHBlYWNlIHRvIHR3byBmZXVkaW5nIGtpbmdkb21zLCBhbmQgdWx0aW1hdGVseSBsZWFkIGhlciB0byBsb3ZlIHdpdGggdGhlIGhlbHAgb2YgUGVuZWxvcGUoVE0pLCB0aGUgbGVhc3QgaW50aW1pZGF0aW5nIG9mIGRyYWdvbnMhIiwicG9wdWxhcml0eSI6MzMuMjAyLCJwb3N0ZXJfcGF0aCI6Ii95c2lHenVNU2MwbkZtbURQbjl6N1U3WVNGWWYuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAwMi0xMC0wMSIsInRpdGxlIjoiQmFyYmllIGFzIFJhcHVuemVsIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuMDA4LCJ2b3RlX2NvdW50IjoxMTU2fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9tenNVV2dtZmwzcFlRRVEyTVZMVGY0dHRIMjYuanBnIiwiZ2VucmVfaWRzIjpbMTYsMTA3NTFdLCJpZCI6MTMyODMsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJhcmJpZSBhcyB0aGUgSXNsYW5kIFByaW5jZXNzIiwib3ZlcnZpZXciOiJTaGlwd3JlY2tlZCBhcyBhIGNoaWxkLCBSb3NlbGxhIChCYXJiaWUpIGdyb3dzIHVwIG9uIHRoZSBpc2xhbmQgdW5kZXIgdGhlIHdhdGNoZnVsIGV5ZXMgb2YgaGVyIGxvdmluZyBhbmltYWwgZnJpZW5kcy4gVGhlIGFycml2YWwgb2YgUHJpbmNlIEFudG9uaW8gbGVhZHMgUm9zZWxsYSBhbmQgaGVyIGZ1cnJ5IHBhbHMgdG8gZXhwbG9yZSBjaXZpbGl6YXRpb24gYW5kIHVsdGltYXRlbHkgc2F2ZSB0aGUga2luZ2RvbSBieSB1bmNvdmVyaW5nIGEgc2VjcmV0IHBsb3QuIiwicG9wdWxhcml0eSI6MzEuMTQsInBvc3Rlcl9wYXRoIjoiL29ndVJQVUZlSHQwSDB3TzBIZTRld1RzZU1Yby5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDA3LTA5LTE3IiwidGl0bGUiOiJCYXJiaWUgYXMgdGhlIElzbGFuZCBQcmluY2VzcyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjIxNSwidm90ZV9jb3VudCI6NjU1fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9sRk5BRHkxZWxOSHBVeE1MNDFNaTdKUnN0ZXkuanBnIiwiZ2VucmVfaWRzIjpbMTYsMTA3NTEsMTRdLCJpZCI6MzQxMzQsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJhcmJpZSBpbiBBIE1lcm1haWQgVGFsZSIsIm92ZXJ2aWV3IjoiQmFyYmllIHN0YXJzIGFzIE1lcmxpYWgsIGEgc3VyZmVyIHdobyBsZWFybnMgYSBzaG9ja2luZyBzZWNyZXQ6IHNoZSdzIGEgbWVybWFpZCEgU2hlIGFuZCBoZXIgZG9scGhpbiBmcmllbmQgc2V0IG91dCBmb3IgYW4gdW5kZXJzZWEgYWR2ZW50dXJlIHRvIHJlc2N1ZSBoZXIgbW90aGVyLCB0aGUgcXVlZW4gb2YgT2NlYW5hLiIsInBvcHVsYXJpdHkiOjMwLjIwNCwicG9zdGVyX3BhdGgiOiIvanRPbG8zQWFYVkJucWZNZUtHRnJaVU1QRnVpLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTAtMDEtMjUiLCJ0aXRsZSI6IkJhcmJpZSBpbiBBIE1lcm1haWQgVGFsZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjIxNCwidm90ZV9jb3VudCI6Njk4fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii93V1dYZDI3eUY4c0s5YkxnQUQ0enhpR2NZSlcuanBnIiwiZ2VucmVfaWRzIjpbMTA3NTEsMTZdLCJpZCI6NDQ4NzQsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJhcmJpZTogQSBGYXNoaW9uIEZhaXJ5dGFsZSIsIm92ZXJ2aWV3IjoiSm9pbiBCYXJiaWUgaW4gYSBjb2xvdXJmdWwsIG1vZGVybi1kYXkgZmFpcnl0YWxlIGZpbGxlZCB3aXRoIGZhc2hpb24sIGZyaWVuZHMgYW5kIGZ1biEgQmFyYmllIGFuZCBoZXIgZG9nIFNlcXVpbiBqZXQgb2ZmIHRvIHZpc2l0IGhlciBBdW50J3MgYW1hemluZyBmYXNoaW9uIGhvdXNlIGluIFBhcmlzLCBhbmQgbXVjaCB0byBoZXIgc3VycHJpc2UgaXQncyBhYm91dCB0byBiZSBzaHV0IGRvd24gZm9yZXZlci4gQWZ0ZXIgc2hlIGRpc2NvdmVycyB0aHJlZSBlbmNoYW50aW5nIEZsYWlyaWVzIHdpdGggc3BhcmtsZS1tYWdpYyBwb3dlcnMsIEJhcmJpZSBjb21lcyB1cCB3aXRoIGEgYnJpbGxpYW50IGlkZWEgdG8gc2F2ZSB0aGUgYnVzaW5lc3MuIFNoZSBldmVuIGluc3BpcmVzIEFsaWNlLCBhIHNoeSBmYXNoaW9uIGRlc2lnbmVyLCBhbmQgdG9nZXRoZXIgdGhleSBjcmVhdGUgYSBkYXp6bGluZyBydW53YXkgZmFzaGlvbiBzaG93LiBCYXJiaWUgc2hvd3MgdGhhdCBtYWdpYyBoYXBwZW5zIHdoZW4geW91IGJlbGlldmUgaW4geW91cnNlbGYuIiwicG9wdWxhcml0eSI6MzcuOTQ1LCJwb3N0ZXJfcGF0aCI6Ii9iRm5mOGY4RFhkQ0FOUTdZNjJkamd1YmhoNFAuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxMC0wOS0xNCIsInRpdGxlIjoiQmFyYmllOiBBIEZhc2hpb24gRmFpcnl0YWxlIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuMTgzLCJ2b3RlX2NvdW50Ijo3MDZ9XSwidG90YWxfcGFnZXMiOjEwLCJ0b3RhbF9yZXN1bHRzIjoxOTB9
  recorded_at: Mon, 23 Oct 2023 19:21:31 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=tmdb_key&query=barbie
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.11
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 23 Oct 2023 19:21:31 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=22801
      X-Memc:
      - HIT
      X-Memc-Key:
      - c99b50cfe8ed7e56bded4661a4eb99aa
      X-Memc-Age:
      - '2712'
      X-Memc-Expires:
      - '21443'
      Etag:
      - W/"fd4bf953fde99e227bc2d2bf93f16ebc"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 34d83bdced2ff151ec8c14c89b681518.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SLC50-C1
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - tXKlKOqIkPVpCNmrHQdGfDW3aaVOCATDgoUvQEm__XtZGIAtE7UGnQ==
      Age:
      - '1'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 23 Oct 2023 19:21:32 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=tmdb_key&query=barbie
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.11
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 23 Oct 2023 19:21:31 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=22801
      X-Memc:
      - HIT
      X-Memc-Key:
      - c99b50cfe8ed7e56bded4661a4eb99aa
      X-Memc-Age:
      - '2712'
      X-Memc-Expires:
      - '21443'
      Etag:
      - W/"fd4bf953fde99e227bc2d2bf93f16ebc"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 e962bcfd10e6f174f59a72d119cef444.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SLC50-C1
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - nZaC17rTd7r4Y123_m34jqou9RVwI-I1Rxy3E1EvKVo0Dv2O372hAg==
      Age:
      - '1'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 23 Oct 2023 19:21:32 GMT
recorded_with: VCR 6.2.0
